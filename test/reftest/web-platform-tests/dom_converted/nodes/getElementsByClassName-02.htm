<!doctype html>
<html class="a
b">
 <head>
  <title>document.getElementsByClassName(): also simple</title>
  <script src="../../resources/testharness.js"></script>
  <script src="../../resources/testharnessreport.js"></script>

  </head>
 <body class="a
">
  <div id="log"></div>
  <script>

// For some reasons, escargot cannot run the following functions defined in testharness.js
// I copied them here, and it works fine
function assert(expected_true, function_name, description, error, substitutions) {
    console.log("asdf? "+ expected_true);
    if (expected_true !== true) {
        var msg = make_message(function_name, description,
                error, substitutions);
        throw new AssertionError(msg);
    }
}

function same_value(x, y) {
    console.log("x: "+x);
    console.log("y: "+y);
    if (y !== y) {
        //NaN case
        return x !== x;
    }
    if (x === 0 && y === 0) {
        //Distinguish +0 and -0
        return 1/x === 1/y;
    }
    return x === y;
}

function assert_array_equals(actual, expected, description) {
    assert(actual.length === expected.length,
            "assert_array_equals", description,
            "lengths differ, expected ${expected} got ${actual}",
            {expected:expected.length, actual:actual.length});

    for (var i = 0; i < actual.length; i++) {

        // FIXME: hasOwnProperty is not defined in HTMLCollection.
        // In fact, we need to impl Array interface for HTMLCollection,
        // which is to be done later. For the time being, we disable
        // the following assert

        //assert(actual.hasOwnProperty(i) === expected.hasOwnProperty(i),
        //       "assert_array_equals", description,
        //       "property ${i}, property expected to be ${expected} but was ${actual}",
        //       {i:i, expected:expected.hasOwnProperty(i) ? "present" : "missing",
        //       actual:actual.hasOwnProperty(i) ? "present" : "missing"});

        // FIXME: Due to not impl Array interface for HTMLCollection
        // we modified [] to .item()
        //assert(same_value(expected[i], actual[i]),
        //       "assert_array_equals", description,
        //       "property ${i}, expected ${expected} but got ${actual}",
        //       {i:i, expected:expected[i], actual:actual[i]});
        assert(same_value(expected[i], actual.item(i)),
                "assert_array_equals", description,
                "property ${i}, expected ${expected} but got ${actual}",
                {i:i, expected:expected[i], actual:actual.item(i)});

    }
}
  </script>

  <script>test(function() {assert_array_equals(document.getElementsByClassName("a\n"), [document.documentElement, document.body])})</script>
  <script>
    // My own testing case
    test(function() {
        console.log(same_value(document.getElementsByClassName("a\n").item(0), document.documentElement));
        console.log(same_value(document.getElementsByClassName("a\n").item(1), document.body));
        assert_array_equals(document.getElementsByClassName("a\n"), [document.documentElement, document.body]);
    })
  </script>
 </body>
</html>
